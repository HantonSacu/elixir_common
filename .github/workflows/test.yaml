name: "Run tests"

on: push

jobs:
  vbt:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.7
        env:
          POSTGRES_USER: "postgres"
          POSTGRES_PASSWORD: "postgres"
          POSTGRES_DB: "vbt_test"
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      CACHE_VERSION: v1
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-elixir@v1
        with:
          otp-version: 22.2.8
          elixir-version: 1.10.2

      - name: Restore cached deps
        uses: actions/cache@v1
        with:
          path: deps
          key: deps-${{ env.CACHE_VERSION }}-${{ github.ref }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            deps-${{ env.CACHE_VERSION }}-${{ github.ref }}-
            deps-${{ env.CACHE_VERSION }}-

      - name: Restore cached build
        uses: actions/cache@v1
        with:
          path: _build
          key: build-${{ env.CACHE_VERSION }}-${{ github.ref }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            build-${{ env.CACHE_VERSION }}-${{ github.ref }}-
            build-${{ env.CACHE_VERSION }}-

      - name: Fetch deps
        run: mix deps.get

      - name: Compile project
        run: |
          MIX_ENV=test mix compile --warnings-as-errors
          MIX_ENV=dev mix compile --warnings-as-errors
          MIX_ENV=prod mix compile --warnings-as-error

      - name: Check code format
        run: mix format --check-formatted

      - name: Run linter checks
        run: mix credo list

      - name: Run tests
        run: mix test

      - name: Run dialyzer
        run: mix dialyzer

  vbt_new:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.7
        env:
          POSTGRES_USER: "postgres"
          POSTGRES_PASSWORD: "postgres"
          POSTGRES_DB: "vbt_test"
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      CACHE_VERSION: v1
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-elixir@v1
        with:
          otp-version: 22.2.8
          elixir-version: 1.10.2

      - name: Restore cached deps
        uses: actions/cache@v1
        with:
          path: vbt_new/deps
          key: vbt_new_deps-${{ env.CACHE_VERSION }}-${{ github.ref }}-${{ hashFiles(format('{0}{1}', github.workspace, '/vbt_new/mix.lock')) }}
          restore-keys: |
            vbt_new_deps-${{ env.CACHE_VERSION }}-${{ github.ref }}-
            vbt_new_deps-${{ env.CACHE_VERSION }}-

      - name: Restore cached build
        uses: actions/cache@v1
        with:
          path: vbt_new/_build
          key: vbt_new_build-${{ env.CACHE_VERSION }}-${{ github.ref }}-${{ hashFiles(format('{0}{1}', github.workspace, '/vbt_new/mix.lock')) }}
          restore-keys: |
            vbt_new_build-${{ env.CACHE_VERSION }}-${{ github.ref }}-
            vbt_new_build-${{ env.CACHE_VERSION }}-

      - name: Restore cached tmp
        uses: actions/cache@v1
        with:
          path: vbt_new/tmp
          key: vbt_new_tmp-${{ env.CACHE_VERSION }}-${{ github.ref }}-${{ hashFiles(format('{0}{1}', github.workspace, '/vbt_new/test_projects/expected_state/mix.lock')) }}
          restore-keys: |
            vbt_new_tmp-${{ env.CACHE_VERSION }}-${{ github.ref }}-
            vbt_new_tmp-${{ env.CACHE_VERSION }}-

      - name: Fetch deps
        run: cd vbt_new && mix deps.get

      - name: Compile project
        run: |
          cd vbt_new
          MIX_ENV=test mix compile --warnings-as-errors
          MIX_ENV=dev mix compile --warnings-as-errors
          MIX_ENV=prod mix compile --warnings-as-error

      - name: Check code format
        run: cd vbt_new && mix format --check-formatted

      - name: Run linter checks
        run: cd vbt_new && mix credo list

      - name: Run tests
        run: cd vbt_new && mix test

      - name: Run dialyzer
        run: cd vbt_new && mix dialyzer
