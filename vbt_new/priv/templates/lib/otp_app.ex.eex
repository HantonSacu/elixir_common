defmodule <%= Mix.Vbt.context_module_name() %> do
  use Boundary, deps: [<%= Mix.Vbt.config_module_name() %>, <%= Mix.Vbt.schemas_module_name() %>]

  @spec start_link :: Supervisor.on_start()
  def start_link do
    Supervisor.start_link(
      [
        <%= Mix.Vbt.context_module_name() %>.Repo,
        {Phoenix.PubSub, name: <%= Mix.Vbt.context_module_name() %>.PubSub}
      ],
      strategy: :one_for_one,
      name: __MODULE__
    )
  end

  @spec child_spec(any) :: Supervisor.child_spec()
  def child_spec(_arg) do
    %{
      id: __MODULE__,
      type: :supervisor,
      start: {__MODULE__, :start_link, []}
    }
  end
end
